variables:
  KUBE_CONTEXT: borisey/kubernetes:kubernetes-connection

stages:
#  - build
  - test
  - deploy_staging
  - deploy_production

#build:
#  image: docker
#  stage: build
#  services:
#    - docker:dind
#  script:
#    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
#    - docker build -t $CI_REGISTRY/borisey/kubernetes/sample:v58 .
#    - docker push $CI_REGISTRY/borisey/kubernetes/sample:v58
#    - echo "Image built"

test:
  image: floor13/compose
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - tests/_output/*
  script:
    - docker-compose up -d
    - docker-compose exec -T php composer install -vv
    - docker-compose exec -T php ./yii db/load
    - docker-compose exec -T php vendor/bin/codecept run

deploy_staging:
  stage: deploy_staging
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl get pods
    - kubectl get nodes -o wide
    - echo "Deployment LOGIN-APP to K8S"
    - ls $CI_PROJECT_DIR/k8s
    - kubectl apply -f $CI_PROJECT_DIR/k8s/.
    - kubectl rollout restart deployments/eco-law-app
    - kubectl get pods
    - kubectl get svc

deploy_production:
  stage: deploy_production
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl get pods
    - kubectl get nodes -o wide
    - echo "Deployment LOGIN-APP to K8S"
    - ls $CI_PROJECT_DIR/k8s
    - kubectl apply -f $CI_PROJECT_DIR/k8s/.
    - kubectl rollout restart deployments/eco-law-app
    - kubectl get pods
    - kubectl get svc